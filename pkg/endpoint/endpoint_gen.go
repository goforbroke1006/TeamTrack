// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "github.com/goforbroke1006/teamtrack/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CreateTeamEndpoint        endpoint.Endpoint
	JoinTeamEndpoint          endpoint.Endpoint
	SetPositionEndpoint       endpoint.Endpoint
	GetMatesPositionsEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.TeamtrackService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateTeamEndpoint:        MakeCreateTeamEndpoint(s),
		GetMatesPositionsEndpoint: MakeGetMatesPositionsEndpoint(s),
		JoinTeamEndpoint:          MakeJoinTeamEndpoint(s),
		SetPositionEndpoint:       MakeSetPositionEndpoint(s),
	}
	for _, m := range mdw["CreateTeam"] {
		eps.CreateTeamEndpoint = m(eps.CreateTeamEndpoint)
	}
	for _, m := range mdw["JoinTeam"] {
		eps.JoinTeamEndpoint = m(eps.JoinTeamEndpoint)
	}
	for _, m := range mdw["SetPosition"] {
		eps.SetPositionEndpoint = m(eps.SetPositionEndpoint)
	}
	for _, m := range mdw["GetMatesPositions"] {
		eps.GetMatesPositionsEndpoint = m(eps.GetMatesPositionsEndpoint)
	}
	return eps
}
